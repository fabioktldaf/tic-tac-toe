{"version":3,"sources":["contracts/TicTacToeFacade.js","components/Loading.js","components/Board.js","components/StatusBar.js","components/App.js","index.js"],"names":["CONFIG","DEFAULT_SEND_OPTIONS","gas","getWeb3","godwokenRpcUrl","providerConfig","rollupTypeHash","ethAccountLockCodeHash","web3Url","provider","PolyjuiceHttpProvider","Web3","onGameCreatedCallback","onOpponentJoinedGameCallback","onMoveMadeCallback","onAccountChanged","onNetworkChanged","a","web3","eth","getChainId","netId","contractAddress","ticTacTocJson","networks","address","contract","Contract","abi","startNewGame","methods","send","from","window","ethereum","selectedAddress","receipt","events","GameCreated","returnValues","sender","gameId","getGame","updatedGame","yourAccount","call","joinGame","parseInt","OpponentJoinedGame","makeMove","move","MoveMade","on","accounts","networkId","getCurrentAccount","className","version","id","xmlns","x","y","viewBox","fill","d","attributeName","attributeType","type","dur","to","repeatCount","gameStatus","handleClick","winner","status","nextMovePlayer","won","toLowerCase","loose","tie","canMove","playable","squares","map","val","i","onClick","Loading","onStartNewGame","onJoinExistingGame","player1","player2","useState","joinGameId","setJoinGameId","iCreateTheGame","console","log","value","onChange","e","target","placeholder","address0","lsGameKey","gameStatusUpdater","fnUpdater","setInterval","setFnUpdater","_fnUpdater","App","ticTacToeFacade","setTicTacToeFacade","strLsStatusGame","localStorage","getItem","length","JSON","parse","loadGameStatus","setGameStatus","loading","setLoading","updateGameStatus","setItem","stringify","handleAccountChanged","newAccount","useEffect","TicTacToeFacade","_ticTacToeFacade","lsStatusGame","handleStartNewGame","handleJoinExistingGame","handleMoveMade","cellNumber","StatusBar","Board","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ebf3f39.chunk.js","sourcesContent":["import Web3 from \"web3\";\nimport { PolyjuiceHttpProvider } from \"@polyjuice-provider/web3\";\n\nimport ticTacTocJson from \"./TicTacToe.json\";\n\nexport const CONFIG = {\n  WEB3_PROVIDER_URL: \"https://godwoken-testnet-web3-rpc.ckbapp.dev\",\n  ROLLUP_TYPE_HASH:\n    \"0x4cc2e6526204ae6a2e8fcf12f7ad472f41a1606d5b9624beebd215d780809f6a\",\n  ETH_ACCOUNT_LOCK_CODE_HASH:\n    \"0xdeec13a7b8e100579541384ccaf4b5223733e4a5483c3aec95ddc4c1d5ea5b22\",\n};\n\nconst DEFAULT_SEND_OPTIONS = {\n  gas: 6000000,\n};\n\nexport const getWeb3 = () => {\n  const godwokenRpcUrl = CONFIG.WEB3_PROVIDER_URL;\n  const providerConfig = {\n    rollupTypeHash: CONFIG.ROLLUP_TYPE_HASH,\n    ethAccountLockCodeHash: CONFIG.ETH_ACCOUNT_LOCK_CODE_HASH,\n    web3Url: godwokenRpcUrl,\n  };\n  const provider = new PolyjuiceHttpProvider(godwokenRpcUrl, providerConfig);\n  return new Web3(provider);\n};\nexport default async (\n  onGameCreatedCallback,\n  onOpponentJoinedGameCallback,\n  onMoveMadeCallback,\n  onAccountChanged,\n  onNetworkChanged\n) => {\n  const web3 = await getWeb3();\n  const netId = await web3.eth.getChainId();\n  const contractAddress = ticTacTocJson.networks[netId].address;\n  const contract = new web3.eth.Contract(ticTacTocJson.abi, contractAddress);\n\n  const startNewGame = async () => {\n    const receipt = await contract.methods.startNewGame().send({\n      ...DEFAULT_SEND_OPTIONS,\n      from: window.ethereum.selectedAddress,\n    });\n\n    const { sender, gameId } = receipt.events.GameCreated.returnValues;\n    const updatedGame = await getGame(gameId);\n\n    onGameCreatedCallback({\n      ...updatedGame,\n      gameId,\n      yourAccount: sender,\n    });\n  };\n\n  const getGame = async (gameId) => {\n    return await contract.methods.getGame(gameId).call();\n  };\n\n  const joinGame = async (gameId) => {\n    const receipt = await contract.methods.joinGame(parseInt(gameId)).send({\n      ...DEFAULT_SEND_OPTIONS,\n      from: window.ethereum.selectedAddress,\n    });\n\n    const { sender } = receipt.events.OpponentJoinedGame.returnValues;\n\n    const updatedGame = await getGame(gameId);\n\n    onOpponentJoinedGameCallback({\n      ...updatedGame,\n      gameId,\n      yourAccount: sender,\n    });\n  };\n\n  const makeMove = async (gameId, move) => {\n    const receipt = await contract.methods\n      .makeMove(parseInt(gameId), parseInt(move))\n      .send({\n        ...DEFAULT_SEND_OPTIONS,\n        from: window.ethereum.selectedAddress,\n      });\n\n    const { sender } = receipt.events.MoveMade.returnValues;\n    const updatedGame = await getGame(gameId);\n\n    onMoveMadeCallback({\n      ...updatedGame,\n      gameId,\n      yourAccount: sender,\n    });\n  };\n\n  window.ethereum.on(\n    \"accountsChanged\",\n    (accounts) => onAccountChanged && onAccountChanged(accounts[0])\n  );\n\n  window.ethereum.on(\n    \"networkChanged\",\n    (networkId) => onNetworkChanged && onNetworkChanged(networkId)\n  );\n\n  const getCurrentAccount = () => window.ethereum.selectedAddress;\n\n  return {\n    startNewGame,\n    joinGame,\n    makeMove,\n    getGame,\n    getCurrentAccount,\n  };\n};\n","import React from \"react\";\n\nexport default () => (\n  <div className=\"loading\">\n    <svg\n      version=\"1.1\"\n      id=\"L7\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 100 100\"\n      enable-background=\"new 0 0 100 100\"\n    >\n      <path\n        fill=\"orange\"\n        d=\"M31.6,3.5C5.9,13.6-6.6,42.7,3.5,68.4c10.1,25.7,39.2,38.3,64.9,28.1l-3.1-7.9c-21.3,8.4-45.4-2-53.8-23.3\n  c-8.4-21.3,2-45.4,23.3-53.8L31.6,3.5z\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          attributeType=\"XML\"\n          type=\"rotate\"\n          dur=\"2s\"\n          from=\"0 50 50\"\n          to=\"360 50 50\"\n          repeatCount=\"indefinite\"\n        ></animateTransform>\n      </path>\n      <path\n        fill=\"orange\"\n        d=\"M42.3,39.6c5.7-4.3,13.9-3.1,18.1,2.7c4.3,5.7,3.1,13.9-2.7,18.1l4.1,5.5c8.8-6.5,10.6-19,4.1-27.7\n  c-6.5-8.8-19-10.6-27.7-4.1L42.3,39.6z\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          attributeType=\"XML\"\n          type=\"rotate\"\n          dur=\"1s\"\n          from=\"0 50 50\"\n          to=\"-360 50 50\"\n          repeatCount=\"indefinite\"\n        ></animateTransform>\n      </path>\n      <path\n        fill=\"#fff\"\n        d=\"M82,35.7C74.1,18,53.4,10.1,35.7,18S10.1,46.6,18,64.3l7.6-3.4c-6-13.5,0-29.3,13.5-35.3s29.3,0,35.3,13.5\n  L82,35.7z\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          attributeType=\"XML\"\n          type=\"rotate\"\n          dur=\"2s\"\n          from=\"0 50 50\"\n          to=\"360 50 50\"\n          repeatCount=\"indefinite\"\n        ></animateTransform>\n      </path>\n    </svg>\n  </div>\n);\n","import React from \"react\";\nimport Loading from \"./Loading\";\n\nexport default ({ gameStatus, handleClick }) => {\n  const { winner, yourAccount, status, gameId, nextMovePlayer } = gameStatus;\n  const won = winner?.toLowerCase() === yourAccount?.toLowerCase();\n  const loose =\n    status == 1 && winner?.toLowerCase() != yourAccount?.toLowerCase();\n  const tie = status == 2;\n  const canMove = yourAccount?.toLowerCase() === nextMovePlayer?.toLowerCase();\n  const playable = gameId > 0 && !won && !loose && !tie;\n\n  return (\n    <div className=\"board\">\n      {gameStatus.squares.map((val, i) => (\n        <button className=\"square\" onClick={() => handleClick(i)} key={i}>\n          {val === \"1\" ? \"X\" : val === \"2\" ? \"O\" : \"\"}\n        </button>\n      ))}\n\n      {playable && !canMove && (\n        <div className=\"board-overlay\">\n          <Loading />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nexport default ({ gameStatus, onStartNewGame, onJoinExistingGame }) => {\n  const {\n    winner,\n    yourAccount,\n    status,\n    nextMovePlayer,\n    gameId,\n    player1,\n    player2,\n  } = gameStatus;\n  const [joinGameId, setJoinGameId] = useState(null);\n\n  const won = winner?.toLowerCase() === yourAccount?.toLowerCase();\n  const loose =\n    status == 1 && winner?.toLowerCase() != yourAccount?.toLowerCase();\n  const tie = status == 2;\n  const canMove = yourAccount?.toLowerCase() === nextMovePlayer?.toLowerCase();\n  const playable = gameId > 0 && !won && !loose && !tie;\n  const iCreateTheGame = player1?.toLowerCase() === yourAccount?.toLowerCase();\n\n  console.log(\"game\");\n\n  const renderMessage = (condition, message) =>\n    condition && <div className=\"message message-colored\">{message}</div>;\n\n  return (\n    <div className=\"status-bar\">\n      <h1 className=\"title\">Tic Tac Toe</h1>\n\n      <div className=\"actions\">\n        <div className=\"action\">\n          <button className=\"button-new-game\" onClick={() => onStartNewGame()}>\n            Create New Game\n          </button>\n        </div>\n\n        <div className=\"action\">\n          <button\n            className=\"join-game-button\"\n            onClick={() => onJoinExistingGame(joinGameId)}\n          >\n            Join a Game\n          </button>\n          <input\n            className=\"input-join-game\"\n            value={joinGameId}\n            onChange={(e) => setJoinGameId(e.target.value)}\n            placeholder=\"Game Id\"\n          />\n        </div>\n      </div>\n\n      <div className=\"messages\">\n        {iCreateTheGame &&\n          playable &&\n          player2 === \"0x0000000000000000000000000000000000000000\" && (\n            <div className=\"message\">\n              <p>\n                Game created! The ID is\n                <span className=\"game-details\"> {gameId}</span>\n              </p>\n              <p>Give it to the other player so he can join the game.</p>\n            </div>\n          )}\n        <div className=\"message\">\n          {playable && canMove\n            ? \"It's your turn\"\n            : playable && !canMove\n            ? \"Wait for your opponent's move\"\n            : \"Create a new game or insert a Game Id and join an existing game\"}\n        </div>\n\n        {won && (\n          <div className=\"message message-colored\"> *** YOU WIN *** </div>\n        )}\n        {loose && <div className=\"message message-colored\"> YOU LOOSE </div>}\n        {tie && (\n          <div className=\"message message-colored\"> The game is a draw... </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport TicTacToeFacade from \"../contracts/TicTacToeFacade\";\nimport \"../styles/app.css\";\nimport Board from \"./Board\";\nimport StatusBar from \"./StatusBar\";\nimport Loading from \"./Loading\";\n\nconst address0 = \"0x0000000000000000000000000000000000000000\";\nconst lsGameKey = \"tic-tac-toc-game\";\n\nconst loadGameStatus = () => {\n  const strLsStatusGame = window.localStorage.getItem(lsGameKey);\n\n  return strLsStatusGame?.length > 0\n    ? JSON.parse(strLsStatusGame)\n    : {\n        squares: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n        player1: address0,\n        player2: address0,\n        nextMovePlayer: address0,\n        winner: address0,\n        status: -1,\n        gameId: -1,\n      };\n};\n\nconst gameStatusUpdater = (() => {\n  let fnUpdater = null;\n  const setFnUpdater = (_fnUpdater) => (fnUpdater = _fnUpdater);\n\n  setInterval(async () => {\n    if (!!fnUpdater) await fnUpdater();\n  }, 5000);\n\n  return {\n    setFnUpdater,\n  };\n})();\n\nfunction App() {\n  const [ticTacToeFacade, setTicTacToeFacade] = useState();\n  const [gameStatus, setGameStatus] = useState(loadGameStatus());\n  const [loading, setLoading] = useState(false);\n\n  const updateGameStatus = (updatedGame) => {\n    window.localStorage.setItem(lsGameKey, JSON.stringify(updatedGame));\n    setGameStatus({\n      gameStatus,\n      ...updatedGame,\n    });\n  };\n\n  const handleAccountChanged = (newAccount) => {\n    console.log(\"new account: \", newAccount);\n    updateGameStatus({\n      ...gameStatus,\n      yourAccount: newAccount,\n    });\n  };\n\n  useEffect(() => {\n    (async () => {\n      const _ticTacToeFacade = await TicTacToeFacade(\n        (updatedGame) => updateGameStatus(updatedGame),\n        (updatedGame) => updateGameStatus(updatedGame),\n        (updatedGame) => updateGameStatus(updatedGame),\n        handleAccountChanged\n      );\n\n      setTicTacToeFacade(_ticTacToeFacade);\n\n      const strLsStatusGame = window.localStorage.getItem(lsGameKey);\n\n      if (strLsStatusGame?.length > 0) {\n        const lsStatusGame = JSON.parse(strLsStatusGame);\n        setGameStatus({\n          ...lsStatusGame,\n          yourAccount: await _ticTacToeFacade.getCurrentAccount(),\n        });\n      }\n    })();\n  }, []);\n\n  const handleStartNewGame = async () => {\n    console.log(\"ticTacToeFacade \", ticTacToeFacade);\n\n    setLoading(true);\n    try {\n      await ticTacToeFacade.startNewGame();\n    } catch (err) {}\n\n    setLoading(false);\n  };\n\n  const handleJoinExistingGame = async (gameId) => {\n    setLoading(true);\n    try {\n      await ticTacToeFacade.joinGame(gameId);\n    } catch (err) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  };\n\n  const handleMoveMade = async (cellNumber) => {\n    setLoading(true);\n    try {\n      await ticTacToeFacade.makeMove(parseInt(gameStatus.gameId), cellNumber);\n    } catch (err) {\n      console.log(err);\n    }\n    setLoading(false);\n  };\n\n  console.log(\"gameStatus \", gameStatus);\n\n  gameStatusUpdater.setFnUpdater(async () => {\n    if (ticTacToeFacade && gameStatus.gameId > 0) {\n      console.log(\"updating game ----- \", gameStatus);\n\n      const updatedGame = await ticTacToeFacade.getGame(gameStatus.gameId);\n      updateGameStatus({\n        ...gameStatus, // not overwrite \"yourAccount\"\n        ...updatedGame,\n      });\n    }\n  });\n\n  return (\n    <div className=\"app\">\n      <StatusBar\n        gameStatus={gameStatus}\n        onStartNewGame={handleStartNewGame}\n        onJoinExistingGame={handleJoinExistingGame}\n      />\n      {gameStatus.gameId > 0 && (\n        <Board gameStatus={gameStatus} handleClick={handleMoveMade} />\n      )}\n      {loading && (\n        <div className=\"waiting-overlay\">\n          <div className=\"waiting-overlay-inner\">\n            <Loading />{\" \"}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}